{
    "0": {"key": "#include<iostream>", "val": "#include<iostream>"}, "1": {"key": "findSum(num1,num2);", "val": "findSum(num1,num2);"}, "2": {"key": "numArr[5];", "val": "numArr[5];"},
    "3": {"key": "#include<queue>", "val": "#include<queue>"}, "4": {"key": "num=3;", "val": "num=3"}, "5": {"key": "include<vector>", "val": "include<vector>"},
    "6": {"key": "cout<<\"Hello\";", "val": "cout<<\"Hello\";"}, "7": {"key": "#include<list>", "val": "#include<list>"}, "8": {"key": "namespace", "val": "namespace"},
    "9": {"key": "%d", "val": "%d"}, "10": {"key": "cout<<endl;", "val": "cout<<endl;"}, "11": {"key": "return;", "val": "return;"},
    "12": {"key": "int", "val": "int"}, "13": {"key": "char", "val": "char"}, "14": {"key": "double", "val": "double"},
    "15": {"key": "null", "val": "null"}, "16": {"key": "*ptr", "val": "*ptr"}, "17": {"key": "i++", "val": "i++"},
    "18": {"key": "const", "val": "const"}, "19": {"key": "||", "val": "||"}, "20": {"key": "&&", "val": "&&"},
    "21": {"key": "using", "val": "using"}, "22": {"key": "void", "val": "void"}, "23": {"key": "string", "val": "string"},
    "24": {"key": "std", "val": "std"}, "25": {"key": "cin>>num;", "val": "cin>>num;"}, "26": {"key": "break;", "val": "break;"},
    "27": {"key": "continue", "val": "continue"}, "28": {"key": "#include<string>", "val": "#include<string>"}, "29": {"key": "bool", "val": "bool"},
    "30": {"key": "min(x,y);", "val": "min(x,y);"}, "31": {"key": "max(x,y);", "val": "max(x,y);"}, "32": {"key": "#include<cmath>", "val": "#include<cmath>"},
    "33": {"key": "sqrt(64);", "val": "sqrt(64);"}, "34": {"key": "round(2.6);", "val": "round(2.6);"}, "35": {"key": "public:", "val": "public:"},
    "36": {"key": "private:", "val": "private:"}, "37": {"key": "protected:", "val": "protected:"}, "38": {"key": "object.name", "val": "object.name"},
    "39": {"key": "queue<int>", "val": "queue<int>"}, "40": {"key": "queue.push(val);", "val": "queue.push(val);"}, "41": {"key": "queue.pop();", "val": "queue.pop();"},
    "42": {"key": "nullptr", "val": "nullptr"}, "43": {"key": "postOrder(root->left);", "val": "postOrder(root->left);"}, "44": {"key": "preOrder(root->right);", "val": "preOrder(root->right);"},
    "45": {"key": "inOrder(root->left)", "val": "inOrder(root->left)"}, "46": {"key": "Node*", "val": "Node*"}, "47": {"key": "root", "val": "root"},
    "48": {"key": "q.pop()", "val": "q.pop()"}, "49": {"key": "q.push(data)", "val": "q.push(data)"}, "50": {"key": "bool", "val": "bool"},
    "51": {"key": "isEmpty", "val": "isEmpty"}, "52": {"key": "isFull", "val": "isFull"}, "53": {"key": "break;", "val": "break;"}
}
  